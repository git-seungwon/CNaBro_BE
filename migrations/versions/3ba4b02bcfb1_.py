"""empty message

Revision ID: 3ba4b02bcfb1
Revises: 5de04c59a98d
Create Date: 2024-11-08 11:48:17.870412

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3ba4b02bcfb1'
down_revision: Union[str, None] = '5de04c59a98d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False, comment='유저고유번호'),
    sa.Column('user_nickname', sa.String(length=20), nullable=False, comment='유저 닉네임'),
    sa.Column('email', sa.String(length=320), nullable=False, comment='유저 이메일'),
    sa.Column('password', sa.String(length=20), nullable=True, comment='유저 비밀번호'),
    sa.Column('mobile_number', sa.String(length=11), nullable=False, comment='유저 전화번호'),
    sa.Column('create_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='생성시각'),
    sa.Column('last_update_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='최종 변경 시각'),
    sa.Column('last_login_datetime', sa.DateTime(), nullable=False, comment='최종 로그인 시각'),
    sa.Column('last_login_IP', sa.String(length=50), nullable=False, comment='최종 로그인 IP'),
    sa.Column('email_agreement', sa.Boolean(), nullable=False, comment='이메일 동의 여부'),
    sa.Column('profile_url', sa.String(length=255), nullable=True, comment='프로필 사진 주소'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('agreement',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='동의 고유번호'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='유저고유번호'),
    sa.Column('agree_term', sa.Integer(), nullable=True, comment='이용약관 동의 여부'),
    sa.Column('agree_privacy', sa.Integer(), nullable=True, comment='개인정보 동의 여부'),
    sa.Column('agree_sensitive', sa.Integer(), nullable=True, comment='민감정보 동의 여부'),
    sa.Column('create_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False, comment='생성시각'),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('login_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='로그인 기록 고유번호'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='유저고유번호'),
    sa.Column('login_at', sa.DateTime(), nullable=True, comment='로그인 시각'),
    sa.Column('login_IP', sa.String(length=50), nullable=True, comment='로그인 IP'),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('note',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='노트 고유번호'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='유저고유번호'),
    sa.Column('content', sa.Text(), nullable=False, comment='노트 내용'),
    sa.Column('start_time', sa.TIMESTAMP(), nullable=False, comment='시작 시간'),
    sa.Column('end_time', sa.TIMESTAMP(), nullable=False, comment='종료 시간'),
    sa.Column('create_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False, comment='생성시각'),
    sa.Column('edit_at', sa.TIMESTAMP(), nullable=True, comment='수정 시각'),
    sa.Column('score', sa.LargeBinary(length=2), nullable=False, comment='집중 단계를 0~3까지 4단계를 2비트로 표현'),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('refresh_token',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='리프레쉬토큰 고유번호'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='유저고유번호'),
    sa.Column('refresh_token', sa.String(length=255), nullable=False, comment='리프레쉬토큰'),
    sa.Column('create_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False, comment='생성시각'),
    sa.Column('expire_datetime', sa.TIMESTAMP(), nullable=False, comment='만료일시'),
    sa.Column('token_type', sa.Integer(), nullable=True, comment='토큰 유형 (0: Email, 1: Google, 2: Apple)'),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jwt_record',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='발급 고유번호'),
    sa.Column('refresh_token_id', sa.Integer(), nullable=False, comment='리프레쉬토큰 고유번호'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='유저고유번호'),
    sa.Column('ip_address', sa.String(length=20), nullable=True, comment='아이피 주소'),
    sa.Column('expire_datetime', sa.DateTime(), nullable=False, comment='만료일시'),
    sa.Column('logout_at', sa.TIMESTAMP(), nullable=True, comment='로그아웃 시각'),
    sa.Column('create_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False, comment='생성시각'),
    sa.ForeignKeyConstraint(['refresh_token_id'], ['refresh_token.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='태그 고유번호'),
    sa.Column('note_id', sa.Integer(), nullable=False, comment='노트 고유번호'),
    sa.Column('tag_name', sa.String(length=8), nullable=False, comment='태그 이름'),
    sa.ForeignKeyConstraint(['note_id'], ['note.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tag')
    op.drop_table('jwt_record')
    op.drop_table('refresh_token')
    op.drop_table('note')
    op.drop_table('login_log')
    op.drop_table('agreement')
    op.drop_table('user')
    # ### end Alembic commands ###
